version: v1.0
name: CI Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

auto_cancel:
  running:
    when: "branch != 'main'"

blocks:
  - name: Run tests in Linux environment
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
          - sudo apt-get update && sudo apt-get install -y libyaml-dev
          - git -C ${HOME}/.rbenv/plugins/ruby-build pull
      epilogue:
        always:
          commands:
            - test-results publish --name ${RUBY_VERSION} ${TEST_RESULTS_FILE}

      jobs:
        - name: run tests
          matrix:
            - env_var: RUBY_VERSION
              values:
                - 3.0.7
                - 3.1.6
                - 3.2.6
                - 3.3.7
                - 3.4.1
                - jruby-9.4.10.0
                - truffleruby-24.1.2
          commands:
            - source .semaphore/ensure-ruby-version.sh
            - source .semaphore/ensure-bundle.sh
            - mkdir -p tmp/test-results/
            - bundle exec rake rubocop
            - export TEST_RESULTS_FILE=tmp/test-results/${RUBY_VERSION}.xml
            - A="--junit --junit-filename=${TEST_RESULTS_FILE}" bundle exec rake test

  - name: Run MacOS Tests
    dependencies: []
    task:
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode15
      prologue:
        commands:
          - checkout
          - git -C ${HOME}/.rbenv/plugins/ruby-build pull
      jobs:
        - name: macos matrix test
          matrix:
            - env_var: RUBY_VERSION
              values:
                - 3.0.7
                - 3.1.6
                - 3.2.6
                - 3.3.7
                - 3.4.1
          commands:
            - source .semaphore/ensure-ruby-version.sh
            - source .semaphore/ensure-bundle.sh
            - mkdir -p tmp/test-results/
            - bundle exec rake rubocop
            - export TEST_RESULTS_FILE=tmp/test-results/${RUBY_VERSION}.xml
            - bundle exec rake test


after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
